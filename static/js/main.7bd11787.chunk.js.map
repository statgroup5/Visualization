{"version":3,"sources":["components/GeoChart.js","components/GraphLayout.js","components/Graph.js","graphs/Switzerland.js","graphs/Germany.js","graphs/Luxembourg.js","graphs/Italy.js","graphs/France.js","App.js","index.js"],"names":["GeoChart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","chartRef","React","createRef","google","window","charts","load","packages","mapsApiKey","setOnLoadCallback","data","visualization","arrayToDataTable","options","sizeAxis","minValue","maxValue","colorAxis","colors","value","region","displayMode","keepAspectRatio","height","innerHeight","width","innerWidth","chart","current","draw","events","addListener","svg","getElementsByTagName","style","e","console","log","history","push","classes","react_default","a","createElement","Fragment","className","root","ref","Component","withStyles","theme","display","flexGrow","overflow","GraphLayout","_classnames","_classnames2","_classnames3","_classnames4","_classnames5","_this$props","name","childrens","Children","toArray","children","index_es","container","direction","item","xs","rootLeft","variant","color","onClick","ArrowBack_default","marginTop","react_router_dom","to","classnames","defineProperty","active","inactive","spacing","alignItems","map","ele","padding","position","flexDirection","fontWeight","RecipeReviewCard","Card_default","card","CardHeader_default","title","subheader","CardContent_default","maxWidth","minWidth","Switzerland","chartRef1","chartRef2","chartRef3","chartRef4","animate","handleGDPStackFactorsResponse","response","isError","errorAlert","getDataTable","options_fullStacked","isStacked","legend","maxLines","vAxis","format","ticks","hAxis","animation","duration","easing","startup","AreaChart","handleRevStackFactorsResponse","handleGDPLineResponse","curveType","LineChart","handleRevLineResponse","res","alert","getMessage","getDetailedMessage","url","queryString","encodeURIComponent","query","Query","send","components_GraphLayout","Graph","media","paddingTop","actions","expand","transform","marginLeft","transition","transitions","create","shortest","expandOpen","avatar","backgroundColor","red","Germany","Luxembourg","Italy","France","MainImpl","refAllGdp","refAllRev","refGdpDistributive","refGdpFinancial","refGdpIndustry","refRevGood","refTaxGrowthRate","drawChart","handleTaxGrowthRateLineResponse","handleGDPDISLineResponse","handleGDPFILineResponse","handleGDPINLineResponse","handleREVGOODLineResponse","handleREVLineResponse","drawChartALL","drawChartITA","drawChartGER","drawChartLUX","drawChartCHE","drawChartFRA","viewWindow","max","ComboChart","seriesType","series","5","type","RdrawChartALL","RdrawChartITA","RdrawChartGER","RdrawChartLUX","RdrawChartCHE","RdrawChartFRA","_this2","geoRoot","components_GeoChart","gridRoot","justifyContent","Main","margin","App","basename","react_router","exact","path","render","graphs_Germany","graphs_France","graphs_Switzerland","graphs_Luxembourg","graphs_Italy","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.7bd11787.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexGrow: 1,\n        overflow: 'hidden',\n    }\n});\n\nclass GeoChart extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.chartRef = React.createRef();\n    }\n    \n    componentDidMount() {\n        const { google } = window;\n\n        google.charts.load('current', {\n            'packages': ['geochart'],\n            'mapsApiKey': 'AIzaSyBAcjCPZn38wQyohwRtTVDYB6g64EU91AQ'\n        });\n        google.charts.setOnLoadCallback(drawMarkersMap);\n        \n        const _this = this;\n        function drawMarkersMap() {\n            var data = google.visualization.arrayToDataTable([\n                ['Country',   'Recent GDP'],\n                ['France',  2291697],\n                ['Germany', 3277340],\n                ['Switzerland', 586148],\n                ['Luxembourg', 55299],\n                ['Italy', 1724205],\n            ]);\n            \n            var options = {\n                sizeAxis: { minValue: 55299.37, maxValue: 3277340 },\n                colorAxis: {\n                    colors: ['lightpink', 'pink', 'tomato', 'crimson' ],\n                    value: [ 55299, 586148, 1724205, 2291697, 3277340]\n                },\n                region: '150', // Western Europe\n                displayMode: 'region',\n                keepAspectRatio: true,\n                height: window.innerHeight,\n                width: window.innerWidth,\n            };\n            \n            var chart = new google.visualization.GeoChart(_this.chartRef.current);\n            chart.draw(data, options);\n\n            google.visualization.events.addListener(chart, 'ready', function() {\n                const svg = _this.chartRef.current.getElementsByTagName('svg')[0];\n                svg.style = \"transform: scale(1.25) translate3d(5%, -5%, 0);\";\n            });\n\n            google.visualization.events.addListener(chart, 'regionClick', function(e) {\n                console.log(e);\n                switch (e.region) {\n                    case \"IT\":\n                        _this.props.history.push(\"/italy\");\n                        break;\n                    case \"FR\":\n                        _this.props.history.push(\"/france\");\n                        break;\n                    case \"CH\":\n                        _this.props.history.push(\"/switzerland\");\n                        break;\n                    case \"DE\":\n                        _this.props.history.push(\"/germany\");\n                        break;\n                    case \"LU\":\n                        _this.props.history.push(\"/luxembourg\");\n                        break;\n                }\n            });\n        }\n    }\n    \n    render() {\n        const { classes } = this.props;\n\n        return (\n            <React.Fragment>\n                <div className={classes.root}>\n                    <div ref={this.chartRef} className={classes.chart}></div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n    \nGeoChart.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(GeoChart);","import React from 'react';\nimport classnames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Grid, withStyles, Button, Typography } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nimport ArrowBack from '@material-ui/icons/ArrowBack';\n\nconst styles = theme => ({\n    root: {\n        padding: 8,\n    },\n    rootLeft: {\n        position: 'fixed',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    active: {\n        fontWeight: 'bold',\n        color: 'black'\n    },\n    inactive: {\n        fontWeight: 'normal',\n        color: '#BFBFBF'\n    }\n});\n\nclass GraphLayout extends React.Component {\n    render() {\n        const { classes, name } = this.props;\n        const childrens = React.Children.toArray(this.props.children);\n\n        return (\n            <React.Fragment>\n                <Grid className={classes.root} container direction=\"row\">\n                    <Grid item xs={3}>\n                        <div className={classes.rootLeft}>\n                            <div>\n                                <Button variant=\"fab\" color=\"primary\" onClick={() => this.props.history.push(\"/\")}>\n                                    <ArrowBack />\n                                </Button>\n                            </div>\n                            <div style={{ marginTop: 100 }}>\n                                {/* <Typography variant=\"h2\">{this.props.name}</Typography> */}\n                                <Link to=\"/france\"><Typography className={classnames({ [classes.active]: name === 'France', [classes.inactive]: name !== 'France' })} variant=\"h2\">France</Typography></Link>\n                                <Link to=\"/germany\"><Typography className={classnames({ [classes.active]: name === 'Germany', [classes.inactive]: name !== 'Germany' })} variant=\"h2\">Germany</Typography></Link>\n                                <Link to=\"/italy\"><Typography className={classnames({ [classes.active]: name === 'Italy', [classes.inactive]: name !== 'Italy' })} variant=\"h2\">Italy</Typography></Link>\n                                <Link to=\"/luxembourg\"><Typography className={classnames({ [classes.active]: name === 'Luxembourg', [classes.inactive]: name !== 'Luxembourg' })} variant=\"h2\">Luxembourg</Typography></Link>\n                                <Link to=\"/switzerland\"><Typography className={classnames({ [classes.active]: name === 'Switzerland', [classes.inactive]: name !== 'Switzerland' })} variant=\"h2\">Switzerland</Typography></Link>\n                            </div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={9}>\n                        <Grid container direction=\"column\" spacing={16} alignItems=\"center\">\n                            { \n                                childrens.map(ele => (\n                                    <Grid item>\n                                        {ele}\n                                    </Grid>\n                                ))\n                            }\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        );\n    }\n}\n\nGraphLayout.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n  \nexport default withStyles(styles)(GraphLayout);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport red from '@material-ui/core/colors/red';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nconst styles = theme => ({\n  card: {\n    maxWidth: 960,\n    minWidth: 320\n  },\n});\n\nclass RecipeReviewCard extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Card className={classnames(classes.card, 'animated', 'fadeInUp')}>\n        <CardHeader\n          title={this.props.title}\n          subheader={this.props.subheader}\n        />\n        <CardContent>\n          { this.props.children }\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\nRecipeReviewCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(RecipeReviewCard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport red from '@material-ui/core/colors/red';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Graph from '../components/Graph';\nimport GraphLayout from '../components/GraphLayout';\n\nconst styles = theme => ({\n    card: {\n      maxWidth: 960,\n      minWidth: 320\n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    actions: {\n      display: 'flex',\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n  });\n\nclass Switzerland extends React.Component {\n    constructor(props) {\n        super(props);\n        this.chartRef1 = React.createRef();\n        this.chartRef2 = React.createRef();\n        this.chartRef3 = React.createRef();\n        this.chartRef4 = React.createRef();\n    }\n\n    componentDidMount() {\n        const { google } = window;\n        const _this = this;\n        \n        function drawChart() {\n            let url =\n                \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=CHE_GDP_Factors&headers=1&tq=\";\n            let queryString = encodeURIComponent(\"select A,B,C,D,E,F,G\");\n            let query = new google.visualization.Query(url + queryString);\n            query.send(handleGDPStackFactorsResponse);\n        \n            url =\n                \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=CHE_REV_Factors&headers=1&tq=\";\n            queryString = encodeURIComponent(\"select A,B,C,D,E\");\n            query = new google.visualization.Query(url + queryString);\n            query.send(handleRevStackFactorsResponse);\n        \n            url =\n                \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=CHE_GDP_Factors&headers=1&tq=\";\n            queryString = encodeURIComponent(\"select A,H\");\n            query = new google.visualization.Query(url + queryString);\n            query.send(handleGDPLineResponse);\n        \n            url =\n                \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=CHE_REV_Factors&headers=1&tq=\";\n            queryString = encodeURIComponent(\"select A,F\");\n            query = new google.visualization.Query(url + queryString);\n            query.send(handleRevLineResponse);\n        }\n\n        const animate = \"out\"\n        \n        function handleGDPStackFactorsResponse(response) {\n            if (response.isError()) {\n                errorAlert(response);\n                return;\n            }\n            var data = response.getDataTable();\n        \n            var options_fullStacked = {\n                title: \"GDP Factors\",\n                isStacked: \"relative\",\n                legend: {\n                    position: \"right\",\n                    maxLines: 3\n                },\n                vAxis: {\n                    format: \"#%\",\n                    minValue: 0,\n                    ticks: [0, 0.2, 0.4, 0.6, 0.8, 1]\n                },\n                hAxis: {\n                    format: '#',\n                    title: \"year\"\n                },\n                animation: {\n                    duration: 1000,\n                    easing: animate,\n                    startup: true,\n                },\n            };\n        \n            var gdp_area = new google.visualization.AreaChart(_this.chartRef1.current);\n            gdp_area.draw(data, options_fullStacked);\n        }\n        \n        function handleRevStackFactorsResponse(response) {\n            if (response.isError()) {\n                errorAlert(response);\n                return;\n            }\n            var data = response.getDataTable();\n        \n            var options_fullStacked = {\n                title: \"Revenue Factors\",\n                isStacked: \"relative\",\n                legend: {\n                    position: \"right\",\n                    maxLines: 3\n                },\n                vAxis: {\n                    format: \"#%\",\n                    minValue: 0,\n                    ticks: [0, 0.2, 0.4, 0.6, 0.8, 1]\n                },\n                hAxis: {\n                    format: '#',\n                    title: \"year\"\n                },\n                animation: {\n                    duration: 1000,\n                    easing: animate,\n                    startup: true,\n                },\n            };\n        \n            var gdp_area = new google.visualization.AreaChart(_this.chartRef2.current);\n            gdp_area.draw(data, options_fullStacked);\n        }\n        \n        function handleGDPLineResponse(response) {\n            if (response.isError()) {\n                errorAlert(response);\n                return;\n            }\n            var data = response.getDataTable();\n            var options = {\n                title: \"GDP\",\n                curveType: 'function',\n                legend: {\n                    position: 'bottom'\n                },\n                animation: {\n                    duration: 1000,\n                    easing: animate,\n                    startup: true,\n                },\n            };\n        \n            var gdp_area = new google.visualization.LineChart(_this.chartRef3.current);\n            gdp_area.draw(data, options);\n        }\n        \n        function handleRevLineResponse(response) {\n            if (response.isError()) {\n                errorAlert(response);\n                return;\n            }\n            var data = response.getDataTable();\n            var options = {\n                title: \"Revenue\",\n                curveType: 'function',\n                legend: {\n                    position: 'bottom'\n                },\n                animation: {\n                    duration: 1000,\n                    easing: animate,\n                    startup: true,\n                },\n            };\n        \n            var gdp_area = new google.visualization.LineChart(_this.chartRef4.current);\n            gdp_area.draw(data, options);\n        }\n        \n        function errorAlert(res) {\n            alert(\"Error in query: \" + res.getMessage() + \" \" +\n                res.getDetailedMessage());\n        }\n\n        google.charts.load(\"current\", {\n            packages: [\"corechart\"]\n        });\n        google.charts.setOnLoadCallback(drawChart);\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <GraphLayout name=\"Switzerland\" history={this.props.history}>\n                <Graph title=\"กราฟแสดงมูลค่า GDP ของประเทศ Switzerland ในแต่ละปี\">\n                    <div ref={this.chartRef3} style={{ width: 900, height: 500 }}></div>\n                </Graph>\n                <Graph title=\"กราฟแสดงส่วนประกอบของ GDP ของประเทศ Switzerland\">\n                    <div ref={this.chartRef1} style={{ width: 900, height: 500 }}></div>\n                </Graph>\n                <Graph title=\"กราฟแสดงค่าของรายได้ที่รัฐบาลได้รับของประเทศ Switzerland ในแต่ละปี\">\n                    <div ref={this.chartRef4} style={{ width: 900, height: 500 }}></div>\n                </Graph>\n                <Graph title=\"กราฟแสดงส่วนประกอบของรายได้ของรัฐบาลของประเทศ Switzerland\">\n                    <div ref={this.chartRef2} style={{ width: 900, height: 500 }}></div>\n                </Graph>\n            </GraphLayout>\n        );\n    }\n}\n\nSwitzerland.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n  \n  export default withStyles(styles)(Switzerland);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport red from '@material-ui/core/colors/red';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Graph from '../components/Graph';\nimport GraphLayout from '../components/GraphLayout';\n\nconst styles = theme => ({\n    card: {\n      maxWidth: 960,\n      minWidth: 320\n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    actions: {\n      display: 'flex',\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n  });\n\nclass Germany extends React.Component {\n    constructor(props) {\n        super(props);\n        this.chartRef1 = React.createRef();\n        this.chartRef2 = React.createRef();\n        this.chartRef3 = React.createRef();\n        this.chartRef4 = React.createRef();\n    }\n\n    componentDidMount() {\n        const { google } = window;\n        const _this = this;\n        \n        function drawChart() {\n            let url =\n                \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=GER_GDP_Factors&headers=1&tq=\";\n            let queryString = encodeURIComponent(\"select A,B,C,D,E,F,G\");\n            let query = new google.visualization.Query(url + queryString);\n            query.send(handleGDPStackFactorsResponse);\n        \n            url =\n                \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=GER_REV_Factors&headers=1&tq=\";\n            queryString = encodeURIComponent(\"select A,B,C,D,E\");\n            query = new google.visualization.Query(url + queryString);\n            query.send(handleRevStackFactorsResponse);\n        \n            url =\n                \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=GER_GDP_Factors&headers=1&tq=\";\n            queryString = encodeURIComponent(\"select A,H\");\n            query = new google.visualization.Query(url + queryString);\n            query.send(handleGDPLineResponse);\n        \n            url =\n                \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=GER_REV_Factors&headers=1&tq=\";\n            queryString = encodeURIComponent(\"select A,F\");\n            query = new google.visualization.Query(url + queryString);\n            query.send(handleRevLineResponse);\n        }\n        const animate = \"out\"\n        \n        function handleGDPStackFactorsResponse(response) {\n            if (response.isError()) {\n                errorAlert(response);\n                return;\n            }\n            var data = response.getDataTable();\n        \n            var options_fullStacked = {\n                title: \"GDP Factors\",\n                isStacked: \"relative\",\n                legend: {\n                    position: \"right\",\n                    maxLines: 3\n                },\n                vAxis: {\n                    format: \"#%\",\n                    minValue: 0,\n                    ticks: [0, 0.2, 0.4, 0.6, 0.8, 1]\n                },\n                hAxis: {\n                    format: '#',\n                    title: \"year\"\n                },\n                animation: {\n                    duration: 1000,\n                    easing: animate,\n                    startup: true,\n                },\n            };\n        \n            var gdp_area = new google.visualization.AreaChart(_this.chartRef1.current);\n            gdp_area.draw(data, options_fullStacked);\n        }\n        \n        function handleRevStackFactorsResponse(response) {\n            if (response.isError()) {\n                errorAlert(response);\n                return;\n            }\n            var data = response.getDataTable();\n        \n            var options_fullStacked = {\n                title: \"Revenue Factors\",\n                isStacked: \"relative\",\n                legend: {\n                    position: \"right\",\n                    maxLines: 3\n                },\n                vAxis: {\n                    format: \"#%\",\n                    minValue: 0,\n                    ticks: [0, 0.2, 0.4, 0.6, 0.8, 1]\n                },\n                hAxis: {\n                    format: '#',\n                    title: \"year\"\n                },\n                animation: {\n                    duration: 1000,\n                    easing: animate,\n                    startup: true,\n                },\n            };\n        \n            var gdp_area = new google.visualization.AreaChart(_this.chartRef2.current);\n            gdp_area.draw(data, options_fullStacked);\n        }\n        \n        function handleGDPLineResponse(response) {\n            if (response.isError()) {\n                errorAlert(response);\n                return;\n            }\n            var data = response.getDataTable();\n            var options = {\n                title: \"GDP\",\n                curveType: 'function',\n                legend: {\n                    position: 'bottom'\n                },\n                animation: {\n                    duration: 1000,\n                    easing: animate,\n                    startup: true,\n                },\n            };\n        \n            var gdp_area = new google.visualization.LineChart(_this.chartRef3.current);\n            gdp_area.draw(data, options);\n        }\n        \n        function handleRevLineResponse(response) {\n            if (response.isError()) {\n                errorAlert(response);\n                return;\n            }\n            var data = response.getDataTable();\n            var options = {\n                title: \"Revenue\",\n                curveType: 'function',\n                legend: {\n                    position: 'bottom'\n                },\n                animation: {\n                    duration: 1000,\n                    easing: animate,\n                    startup: true,\n                },\n            };\n        \n            var gdp_area = new google.visualization.LineChart(_this.chartRef4.current);\n            gdp_area.draw(data, options);\n        }\n        \n        function errorAlert(res) {\n            alert(\"Error in query: \" + res.getMessage() + \" \" +\n                res.getDetailedMessage());\n        }\n\n        google.charts.load(\"current\", {\n            packages: [\"corechart\"]\n        });\n        google.charts.setOnLoadCallback(drawChart);\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <GraphLayout name=\"Germany\" history={this.props.history}>\n                <Graph title=\"กราฟแสดงมูลค่า GDP ของประเทศ Germany ในแต่ละปี\">\n                    <div ref={this.chartRef3} style={{ width: 900, height: 500 }}></div>\n                </Graph>\n                <Graph title=\"กราฟแสดงส่วนประกอบของ GDP ของประเทศ Germany\">\n                    <div ref={this.chartRef1} style={{ width: 900, height: 500 }}></div>\n                </Graph>\n                <Graph title=\"กราฟแสดงค่าของรายได้ที่รัฐบาลได้รับของประเทศ Germany ในแต่ละปี\">\n                    <div ref={this.chartRef4} style={{ width: 900, height: 500 }}></div>\n                </Graph>\n                <Graph title=\"กราฟแสดงส่วนประกอบของรายได้ของรัฐบาลของประเทศ Germany\">\n                    <div ref={this.chartRef2} style={{ width: 900, height: 500 }}></div>\n                </Graph>\n            </GraphLayout>\n        );\n    }\n}\n\nGermany.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n  \nexport default withStyles(styles)(Germany);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport red from '@material-ui/core/colors/red';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Graph from '../components/Graph';\nimport GraphLayout from '../components/GraphLayout';\n\nconst styles = theme => ({\n    card: {\n      maxWidth: 960,\n      minWidth: 320\n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    actions: {\n      display: 'flex',\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n  });\n\nclass Luxembourg extends React.Component {\n    constructor(props) {\n        super(props);\n        this.chartRef1 = React.createRef();\n        this.chartRef2 = React.createRef();\n        this.chartRef3 = React.createRef();\n        this.chartRef4 = React.createRef();\n    }\n\n    componentDidMount() {\n        const { google } = window;\n        const _this = this;\n        \n        function drawChart() {\n            let url =\n                \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=LUX_GDP_Factors&headers=1&tq=\";\n            let queryString = encodeURIComponent(\"select A,B,C,D,E,F,G\");\n            let query = new google.visualization.Query(url + queryString);\n            query.send(handleGDPStackFactorsResponse);\n        \n            url =\n                \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=LUX_REV_Factors&headers=1&tq=\";\n            queryString = encodeURIComponent(\"select A,B,C,D,E\");\n            query = new google.visualization.Query(url + queryString);\n            query.send(handleRevStackFactorsResponse);\n        \n            url =\n                \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=LUX_GDP_Factors&headers=1&tq=\";\n            queryString = encodeURIComponent(\"select A,H\");\n            query = new google.visualization.Query(url + queryString);\n            query.send(handleGDPLineResponse);\n        \n            url =\n                \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=LUX_REV_Factors&headers=1&tq=\";\n            queryString = encodeURIComponent(\"select A,F\");\n            query = new google.visualization.Query(url + queryString);\n            query.send(handleRevLineResponse);\n        }\n\n        const animate = \"out\"\n        \n        function handleGDPStackFactorsResponse(response) {\n            if (response.isError()) {\n                errorAlert(response);\n                return;\n            }\n            var data = response.getDataTable();\n        \n            var options_fullStacked = {\n                title: \"GDP Factors\",\n                isStacked: \"relative\",\n                legend: {\n                    position: \"right\",\n                    maxLines: 3\n                },\n                vAxis: {\n                    format: \"#%\",\n                    minValue: 0,\n                    ticks: [0, 0.2, 0.4, 0.6, 0.8, 1]\n                },\n                hAxis: {\n                    format: '#',\n                    title: \"year\"\n                },\n                animation: {\n                    duration: 1000,\n                    easing: animate,\n                    startup: true,\n                },\n            };\n        \n            var gdp_area = new google.visualization.AreaChart(_this.chartRef1.current);\n            gdp_area.draw(data, options_fullStacked);\n        }\n        \n        function handleRevStackFactorsResponse(response) {\n            if (response.isError()) {\n                errorAlert(response);\n                return;\n            }\n            var data = response.getDataTable();\n        \n            var options_fullStacked = {\n                title: \"Revenue Factors\",\n                isStacked: \"relative\",\n                legend: {\n                    position: \"right\",\n                    maxLines: 3\n                },\n                vAxis: {\n                    format: \"#%\",\n                    minValue: 0,\n                    ticks: [0, 0.2, 0.4, 0.6, 0.8, 1]\n                },\n                hAxis: {\n                    format: '#',\n                    title: \"year\"\n                },\n                animation: {\n                    duration: 1000,\n                    easing: animate,\n                    startup: true,\n                },\n            };\n        \n            var gdp_area = new google.visualization.AreaChart(_this.chartRef2.current);\n            gdp_area.draw(data, options_fullStacked);\n        }\n        \n        function handleGDPLineResponse(response) {\n            if (response.isError()) {\n                errorAlert(response);\n                return;\n            }\n            var data = response.getDataTable();\n            var options = {\n                title: \"GDP\",\n                curveType: 'function',\n                legend: {\n                    position: 'bottom'\n                },\n                animation: {\n                    duration: 1000,\n                    easing: animate,\n                    startup: true,\n                },\n            };\n        \n            var gdp_area = new google.visualization.LineChart(_this.chartRef3.current);\n            gdp_area.draw(data, options);\n        }\n        \n        function handleRevLineResponse(response) {\n            if (response.isError()) {\n                errorAlert(response);\n                return;\n            }\n            var data = response.getDataTable();\n            var options = {\n                title: \"Revenue\",\n                curveType: 'function',\n                legend: {\n                    position: 'bottom'\n                },\n                animation: {\n                    duration: 1000,\n                    easing: animate,\n                    startup: true,\n                },\n            };\n        \n            var gdp_area = new google.visualization.LineChart(_this.chartRef4.current);\n            gdp_area.draw(data, options);\n        }\n        \n        function errorAlert(res) {\n            alert(\"Error in query: \" + res.getMessage() + \" \" +\n                res.getDetailedMessage());\n        }\n\n        google.charts.load(\"current\", {\n            packages: [\"corechart\"]\n        });\n        google.charts.setOnLoadCallback(drawChart);\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <GraphLayout name=\"Luxembourg\" history={this.props.history}>\n                <Graph title=\"กราฟแสดงมูลค่า GDP ของประเทศ Luxembourg ในแต่ละปี\">\n                    <div ref={this.chartRef3} style={{ width: 900, height: 500 }}></div>\n                </Graph>\n                <Graph title=\"กราฟแสดงส่วนประกอบของ GDP ของประเทศ Luxembourg\">\n                    <div ref={this.chartRef1} style={{ width: 900, height: 500 }}></div>\n                </Graph>\n                <Graph title=\"กราฟแสดงค่าของรายได้ที่รัฐบาลได้รับของประเทศ Luxembourg ในแต่ละปี\">\n                    <div ref={this.chartRef4} style={{ width: 900, height: 500 }}></div>\n                </Graph>\n                <Graph title=\"กราฟแสดงส่วนประกอบของรายได้ของรัฐบาลของประเทศ Luxembourg\">\n                    <div ref={this.chartRef2} style={{ width: 900, height: 500 }}></div>\n                </Graph>\n            </GraphLayout>\n        );\n    }\n}\n\nLuxembourg.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n  \n  export default withStyles(styles)(Luxembourg);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport red from '@material-ui/core/colors/red';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Graph from '../components/Graph';\nimport GraphLayout from '../components/GraphLayout';\n\nconst styles = theme => ({\n    card: {\n      maxWidth: 960,\n      minWidth: 320\n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    actions: {\n      display: 'flex',\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n  });\n\nclass Italy extends React.Component {\n    constructor(props) {\n        super(props);\n        this.chartRef1 = React.createRef();\n        this.chartRef2 = React.createRef();\n        this.chartRef3 = React.createRef();\n        this.chartRef4 = React.createRef();\n    }\n\n    componentDidMount() {\n        const { google } = window;\n        const _this = this;\n        \n        function drawChart() {\n            let url =\n                \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=ITA_GDP_Factors&headers=1&tq=\";\n            let queryString = encodeURIComponent(\"select A,B,C,D,E\");\n            let query = new google.visualization.Query(url + queryString);\n            query.send(handleGDPStackFactorsResponse);\n        \n            url =\n                \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=ITA_GDP_Factors&headers=1&tq=\";\n            queryString = encodeURIComponent(\"select A,F\");\n            query = new google.visualization.Query(url + queryString);\n            query.send(handleGDPLineResponse);\n        \n            url =\n                \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=ITA_REV_Factors&headers=1&tq=\";\n            queryString = encodeURIComponent(\"select A,B,C,D,E,F\");\n            query = new google.visualization.Query(url + queryString);\n            query.send(handleRevStackFactorsResponse);\n        \n            url =\n                \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=ITA_REV_Factors&headers=1&tq=\";\n            queryString = encodeURIComponent(\"select A,G\");\n            query = new google.visualization.Query(url + queryString);\n            query.send(handleRevLineResponse);\n        }\n        const animate = \"out\"\n        \n        function handleGDPStackFactorsResponse(response) {\n            if (response.isError()) {\n                errorAlert(response);\n                return;\n            }\n            var data = response.getDataTable();\n        \n            var options_fullStacked = {\n                title: \"GDP Factors\",\n                isStacked: \"relative\",\n                legend: {\n                    position: \"right\",\n                    maxLines: 3\n                },\n                vAxis: {\n                    format: \"#%\",\n                    minValue: 0,\n                    ticks: [0, 0.2, 0.4, 0.6, 0.8, 1]\n                },\n                hAxis: {\n                    format: '#',\n                    title: \"year\"\n                },\n                animation: {\n                    duration: 1000,\n                    easing: animate,\n                    startup: true,\n                },\n            };\n        \n            var gdp_area = new google.visualization.AreaChart(_this.chartRef1.current);\n            gdp_area.draw(data, options_fullStacked);\n        }\n        \n        function handleGDPLineResponse(response) {\n            if (response.isError()) {\n                errorAlert(response);\n                return;\n            }\n            var data = response.getDataTable();\n            var options = {\n                title: \"GDP (millions EURO)\",\n                curveType: 'function',\n                legend: {\n                    position: 'bottom'\n                },\n                hAxis: {\n                    format: '#',\n                    title: \"year\"\n                },\n                animation: {\n                    duration: 1000,\n                    easing: animate,\n                    startup: true,\n                },\n            };\n        \n            var gdp_area = new google.visualization.LineChart(_this.chartRef2.current);\n            gdp_area.draw(data, options);\n        }\n        \n        function handleRevStackFactorsResponse(response) {\n            if (response.isError()) {\n                errorAlert(response);\n                return;\n            }\n            var data = response.getDataTable();\n        \n            var options_fullStacked = {\n                title: \"Revenue Factors\",\n                isStacked: \"relative\",\n                legend: {\n                    position: \"right\",\n                    maxLines: 3\n                },\n                vAxis: {\n                    format: \"#%\",\n                    minValue: 0,\n                    ticks: [0, 0.2, 0.4, 0.6, 0.8, 1]\n                },\n                hAxis: {\n                    format: '#',\n                    title: \"year\"\n                },\n                animation: {\n                    duration: 1000,\n                    easing: animate,\n                    startup: true,\n                },\n            };\n        \n            var gdp_area = new google.visualization.AreaChart(_this.chartRef3.current);\n            gdp_area.draw(data, options_fullStacked);\n        }\n        \n        function handleRevLineResponse(response) {\n            if (response.isError()) {\n                errorAlert(response);\n                return;\n            }\n            var data = response.getDataTable();\n            var options = {\n                title: \"Revenue (millions EURO)\",\n                curveType: 'function',\n                legend: {\n                    position: 'bottom'\n                },\n                hAxis: {\n                    format: '#',\n                    title: \"year\"\n                },\n                animation: {\n                    duration: 1000,\n                    easing: animate,\n                    startup: true,\n                },\n            };\n        \n            var gdp_area = new google.visualization.LineChart(_this.chartRef4.current);\n            gdp_area.draw(data, options);\n        }\n        \n        function errorAlert(res) {\n            alert(\"Error in query: \" + res.getMessage() + \" \" +\n                res.getDetailedMessage());\n        }\n\n        google.charts.load(\"current\", {\n            packages: [\"corechart\"]\n        });\n        google.charts.setOnLoadCallback(drawChart);\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <GraphLayout name=\"Italy\" history={this.props.history}>\n                <Graph title=\"กราฟแสดงแนวโน้มมูลค่า GDP ในแต่ละปีของประเทศ Italy \">\n                    <div ref={this.chartRef2} style={{ width: 900, height: 500 }}></div>\n                </Graph>\n                <Graph title=\"กราฟแสดงส่วนประกอบ GDP ของประเทศ Italy\">\n                    <div ref={this.chartRef1} style={{ width: 900, height: 500 }}></div>\n                </Graph>\n                <Graph title=\"กราฟแสดงแนวโน้มมูลค่าของรายได้ของรัฐบาลในแต่ละปีของประเทศ Italy\">\n                    <div ref={this.chartRef4} style={{ width: 900, height: 500 }}></div>\n                </Graph>\n                <Graph title=\"กราฟแสดงส่วนประกอบของรายได้รัฐบาลของประเทศ Italy\">\n                    <div ref={this.chartRef3} style={{ width: 900, height: 500 }}></div>\n                </Graph>\n            </GraphLayout>\n        );\n    }\n}\n\nItaly.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n  \n  export default withStyles(styles)(Italy);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport red from '@material-ui/core/colors/red';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Graph from '../components/Graph';\nimport GraphLayout from '../components/GraphLayout';\n\nconst styles = theme => ({\n    card: {\n      maxWidth: 960,\n      minWidth: 320\n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    actions: {\n      display: 'flex',\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n  });\n\nclass France extends React.Component {\n    constructor(props) {\n        super(props);\n        this.chartRef1 = React.createRef();\n        this.chartRef2 = React.createRef();\n        this.chartRef3 = React.createRef();\n        this.chartRef4 = React.createRef();\n    }\n\n    componentDidMount() {\n        const { google } = window;\n        const _this = this;\n        \n        function drawChart() {\n            let url =\n                \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=FRA_GDP_Factors&headers=1&tq=\";\n            let queryString = encodeURIComponent(\"select A,B,C,D,E\");\n            let query = new google.visualization.Query(url + queryString);\n            query.send(handleGDPStackFactorsResponse);\n        \n            url =\n                \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=FRA_REV_Factors&headers=1&tq=\";\n            queryString = encodeURIComponent(\"select A,B,C,D,E\");\n            query = new google.visualization.Query(url + queryString);\n            query.send(handleRevStackFactorsResponse);\n        \n            url =\n                \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=FRA_GDP_Factors&headers=1&tq=\";\n            queryString = encodeURIComponent(\"select A,F\");\n            query = new google.visualization.Query(url + queryString);\n            query.send(handleGDPLineResponse);\n        \n            url =\n                \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=FRA_REV_Factors&headers=1&tq=\";\n            queryString = encodeURIComponent(\"select A,F\");\n            query = new google.visualization.Query(url + queryString);\n            query.send(handleRevLineResponse);\n        }\n        const animate = \"out\"\n        \n        function handleGDPStackFactorsResponse(response) {\n            if (response.isError()) {\n                errorAlert(response);\n                return;\n            }\n            var data = response.getDataTable();\n        \n            var options_fullStacked = {\n                title: \"GDP Factors\",\n                isStacked: \"relative\",\n                legend: {\n                    position: \"right\",\n                    maxLines: 3\n                },\n                vAxis: {\n                    format: \"#%\",\n                    minValue: 0,\n                    ticks: [0, 0.2, 0.4, 0.6, 0.8, 1]\n                },\n                hAxis: {\n                    format: '#',\n                    title: \"year\"\n                },\n                animation: {\n                    duration: 1000,\n                    easing: animate,\n                    startup: true,\n                },\n            };\n        \n            var gdp_area = new google.visualization.AreaChart(_this.chartRef1.current);\n            gdp_area.draw(data, options_fullStacked);\n        }\n        \n        function handleRevStackFactorsResponse(response) {\n            if (response.isError()) {\n                errorAlert(response);\n                return;\n            }\n            var data = response.getDataTable();\n        \n            var options_fullStacked = {\n                title: \"Revenue Factors\",\n                isStacked: \"relative\",\n                legend: {\n                    position: \"right\",\n                    maxLines: 3\n                },\n                vAxis: {\n                    format: \"#%\",\n                    minValue: 0,\n                    ticks: [0, 0.2, 0.4, 0.6, 0.8, 1]\n                },\n                hAxis: {\n                    format: '#',\n                    title: \"year\"\n                },\n                animation: {\n                    duration: 1000,\n                    easing: animate,\n                    startup: true,\n                },\n            };\n        \n            var gdp_area = new google.visualization.AreaChart(_this.chartRef2.current);\n            gdp_area.draw(data, options_fullStacked);\n        }\n        \n        function handleGDPLineResponse(response) {\n            if (response.isError()) {\n                errorAlert(response);\n                return;\n            }\n            var data = response.getDataTable();\n            var options = {\n                title: \"GDP\",\n                curveType: 'function',\n                legend: {\n                    position: 'bottom'\n                },\n                animation: {\n                    duration: 1000,\n                    easing: animate,\n                    startup: true,\n                },\n            };\n        \n            var gdp_area = new google.visualization.LineChart(_this.chartRef3.current);\n            gdp_area.draw(data, options);\n        }\n        \n        function handleRevLineResponse(response) {\n            if (response.isError()) {\n                errorAlert(response);\n                return;\n            }\n            var data = response.getDataTable();\n            var options = {\n                title: \"Revenue\",\n                curveType: 'function',\n                legend: {\n                    position: 'bottom'\n                },\n                animation: {\n                    duration: 1000,\n                    easing: animate,\n                    startup: true,\n                },\n            };\n        \n            var gdp_area = new google.visualization.LineChart(_this.chartRef4.current);\n            gdp_area.draw(data, options);\n        }\n        \n        function errorAlert(res) {\n            alert(\"Error in query: \" + res.getMessage() + \" \" +\n                res.getDetailedMessage());\n        }\n     \n        google.charts.load(\"current\", {\n            packages: [\"corechart\"]\n        });\n        google.charts.setOnLoadCallback(drawChart);\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <GraphLayout name=\"France\" history={this.props.history}>\n                <Graph title=\"กราฟแสดงมูลค่า GDP ของประเทศ France ในแต่ละปี\">\n                    <div ref={this.chartRef3} style={{ width: 900, height: 500 }}></div>\n                </Graph>\n                <Graph title=\"กราฟแสดงส่วนประกอบของ GDP ของประเทศ France\">\n                    <div ref={this.chartRef1} style={{ width: 900, height: 500 }}></div>\n                </Graph>\n                <Graph title=\"กราฟแสดงค่าของรายได้ที่รัฐบาลได้รับของประเทศ France ในแต่ละปี\">\n                    <div ref={this.chartRef4} style={{ width: 900, height: 500 }}></div>\n                </Graph>\n                <Graph title=\"กราฟแสดงส่วนประกอบของรายได้ของรัฐบาลของประเทศ France\">\n                    <div ref={this.chartRef2} style={{ width: 900, height: 500 }}></div>\n                </Graph>\n            </GraphLayout>\n        );\n    }\n}\n\nFrance.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n  \n  export default withStyles(styles)(France);","import React, { Component } from 'react';\nimport { Grid, Paper, Card, withStyles, Button } from '@material-ui/core';\nimport { MemoryRouter, BrowserRouter, StaticRouter, Route, Switch, Redirect } from 'react-router-dom';\n\nimport './App.css';\nimport GeoChart from './components/GeoChart';\nimport GraphLayout from './components/GraphLayout';\n\nimport Switzerland from './graphs/Switzerland';\nimport Germany from './graphs/Germany';\nimport Luxembourg from './graphs/Luxembourg';\nimport Italy from './graphs/Italy';\nimport France from './graphs/France';\nimport Graph from './components/Graph';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    margin: 'auto auto'\n  },\n  geoRoot: {\n    marginTop: \"-10%\"\n  },\n  gridRoot: {\n    marginTop: 16\n  }\n});\n\nclass MainImpl extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.refAllGdp = React.createRef();\n    this.refAllRev = React.createRef();\n\n    this.refGdpDistributive = React.createRef();\n    this.refGdpFinancial = React.createRef();\n    this.refGdpIndustry = React.createRef();\n    this.refRevGood = React.createRef();\n    this.refTaxGrowthRate = React.createRef();\n\n    this.chart = {};\n  }\n\n  componentDidMount() {\n    const { google } = window;\n    const _this = this;\n\n    const animate = \"out\";\n    this.chart.drawChart = function() {\n      var url =\n        \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=5Country_GDP&headers=1&tq=\";\n      var queryString = encodeURIComponent(\"select A,B,C,D,E,F\");\n      var query = new google.visualization.Query(url + queryString);\n      query.send(_this.chart.handleGDPLineResponse);\n      var url =\n        \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=GrowthRate&headers=1&tq=\";\n      queryString = encodeURIComponent(\"select A,B,C,D,E,F\");\n      var query = new google.visualization.Query(url + queryString);\n      query.send(_this.chart.handleTaxGrowthRateLineResponse);\n      var url =\n        \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=GDP_DIS&headers=1&tq=\";\n      queryString = encodeURIComponent(\"select A,B,C,D,E\");\n      var query = new google.visualization.Query(url + queryString);\n      query.send(_this.chart.handleGDPDISLineResponse);\n      var url =\n        \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=GDP_FI&headers=1&tq=\";\n      queryString = encodeURIComponent(\"select A,B,C,D,E\");\n      var query = new google.visualization.Query(url + queryString);\n      query.send(_this.chart.handleGDPFILineResponse);\n      var url =\n        \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=GDP_IN&headers=1&tq=\";\n      queryString = encodeURIComponent(\"select A,B,C,D,E\");\n      var query = new google.visualization.Query(url + queryString);\n      query.send(_this.chart.handleGDPINLineResponse);\n      var url =\n        \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=REV_GOOD&headers=1&tq=\";\n      queryString = encodeURIComponent(\"select A,B,C,D,E,F\");\n      var query = new google.visualization.Query(url + queryString);\n      query.send(_this.chart.handleREVGOODLineResponse);\n      var url =\n        \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=5Country_REV&headers=1&tq=\";\n      var queryString = encodeURIComponent(\"select A,B,C,D,E,F\");\n      var query = new google.visualization.Query(url + queryString);\n      query.send(_this.chart.handleREVLineResponse);\n    };\n\n    this.chart.drawChartALL = function() {\n      var url =\n        \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=5Country_GDP&headers=1&tq=\";\n      var queryString = encodeURIComponent(\"select A,B,C,D,E,F\");\n      var query = new google.visualization.Query(url + queryString);\n      query.send(_this.chart.handleGDPLineResponse);\n    };\n    \n    this.chart.drawChartITA = function() {\n      var url =\n        \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=5Country_GDP&headers=1&tq=\";\n      var queryString = encodeURIComponent(\"select A,B\");\n      var query = new google.visualization.Query(url + queryString);\n      query.send(_this.chart.handleGDPLineResponse);\n    };\n  \n    this.chart.drawChartGER = function() {\n      var url =\n        \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=5Country_GDP&headers=1&tq=\";\n      var queryString = encodeURIComponent(\"select A,E\");\n      var query = new google.visualization.Query(url + queryString);\n      query.send(_this.chart.handleGDPLineResponse);\n    };\n  \n    this.chart.drawChartLUX = function() {\n      var url =\n        \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=5Country_GDP&headers=1&tq=\";\n      var queryString = encodeURIComponent(\"select A,F\");\n      var query = new google.visualization.Query(url + queryString);\n      query.send(_this.chart.handleGDPLineResponse);\n    };\n  \n    this.chart.drawChartCHE = function() {\n      var url =\n        \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=5Country_GDP&headers=1&tq=\";\n      var queryString = encodeURIComponent(\"select A,C\");\n      var query = new google.visualization.Query(url + queryString);\n      query.send(_this.chart.handleGDPLineResponse);\n    };\n  \n    this.chart.drawChartFRA = function() {\n      var url =\n        \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=5Country_GDP&headers=1&tq=\";\n      var queryString = encodeURIComponent(\"select A,D\");\n      var query = new google.visualization.Query(url + queryString);\n      query.send(_this.chart.handleGDPLineResponse);\n    };\n\n    this.chart.handleGDPLineResponse = function(response) {\n      if (response.isError()) {\n        errorAlert(response);\n        return;\n      }\n      var data = response.getDataTable();\n      var options = {\n        title: 'Gross Domestic Product 1995-2017 (GDP)',\n        hAxis: {\n          title: \"Year\",\n          format: '#',\n          viewWindow: {\n            max: 2017\n          }\n        },\n        vAxis: {\n          title: \"Euro, Millions\",\n        },\n        animation: {\n          duration: 1000,\n          easing: animate,\n          startup: true,\n        },\n      }\n      var chart = new google.visualization.LineChart(_this.refAllGdp.current);\n      chart.draw(data, options);\n    };\n  \n    this.chart.handleGDPDISLineResponse = function(response) {\n  \n      if (response.isError()) {\n        errorAlert(response);\n        return;\n      }\n      var data = response.getDataTable();\n  \n      var options = {\n        title: 'GDP Distributive',\n        vAxis: {\n          title: 'Euro, Millions'\n        },\n        hAxis: {\n          title: 'Year',\n          format: '#'\n        },\n        seriesType: 'bars',\n        series: {\n          5: {\n            type: 'line'\n          }\n        }\n      };\n  \n      var gdpdis = new google.visualization.ComboChart(_this.refGdpDistributive.current);\n      gdpdis.draw(data, options);\n    };\n  \n    this.chart.handleGDPFILineResponse = function(response) {\n  \n      if (response.isError()) {\n        errorAlert(response);\n        return;\n      }\n      var data = response.getDataTable();\n  \n      var options = {\n        title: 'GDP Financial and insurance activities',\n        vAxis: {\n          title: 'Euro, Millions'\n        },\n        hAxis: {\n          title: 'Year',\n          format: '#'\n        },\n        seriesType: 'bars',\n        series: {\n          5: {\n            type: 'line'\n          }\n        }\n      };\n  \n      var gdpfi = new google.visualization.ComboChart(_this.refGdpFinancial.current);\n      gdpfi.draw(data, options);\n    };\n  \n    this.chart.handleGDPINLineResponse = function(response) {\n  \n      if (response.isError()) {\n        errorAlert(response);\n        return;\n      }\n      var data = response.getDataTable();\n  \n      var options = {\n        title: 'GDP Industry Energy',\n        vAxis: {\n          title: 'Euro, Millions'\n        },\n        hAxis: {\n          title: 'Year',\n          format: '#'\n        },\n        seriesType: 'bars',\n        series: {\n          5: {\n            type: 'line'\n          }\n        }\n      };\n  \n      var gdpin = new google.visualization.ComboChart(_this.refGdpIndustry.current);\n      gdpin.draw(data, options);\n    };\n  \n    this.chart.handleREVGOODLineResponse = function(response) {\n  \n      if (response.isError()) {\n        errorAlert(response);\n        return;\n      }\n      var data = response.getDataTable();\n  \n      var options = {\n        title: 'Revenue Good and Service',\n        vAxis: {\n          title: 'Euro, Millions'\n        },\n        hAxis: {\n          title: 'Year',\n          format: '#'\n        },\n        seriesType: 'bars',\n        series: {\n          5: {\n            type: 'line'\n          }\n        }\n      };\n  \n      var revgood = new google.visualization.ComboChart(_this.refRevGood.current);\n      revgood.draw(data, options);\n    };\n  \n    this.chart.handleTaxGrowthRateLineResponse = function(response) {\n      if (response.isError()) {\n        errorAlert(response);\n        return;\n      }\n      var data = response.getDataTable();\n      var options = {\n        title: \"Tax on Income And Profits of Individuals Growth Rate\",\n        curveType: 'function',\n        hAxis: {\n          format: '#',\n          title: \"Year\"\n        },\n        vAxis: {\n          title: \"Growth Rate\",\n        },\n        animation: {\n          duration: 1000,\n          easing: animate,\n          startup: true,\n        },\n      };\n  \n      var tax_grw = new google.visualization.LineChart(_this.refTaxGrowthRate.current);\n      tax_grw.draw(data, options);\n    };\n  \n    this.chart.handleREVLineResponse = function(response) {\n      if (response.isError()) {\n        errorAlert(response);\n        return;\n      }\n      var data = response.getDataTable();\n      var options = {\n        title: 'Revenue 1995-2017',\n        hAxis: {\n          title: \"Year\",\n          format: '#',\n          viewWindow: {\n            max: 2017\n          }\n        },\n        vAxis: {\n          title: \"Euro, Millions\",\n        },\n        animation: {\n          duration: 1000,\n          easing: animate,\n          startup: true,\n        },\n      }\n      var chart = new google.visualization.LineChart(_this.refAllRev.current);\n      chart.draw(data, options);\n    };\n  \n    this.chart.RdrawChartALL = function() {\n      var url =\n        \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=5Country_REV&headers=1&tq=\";\n      var queryString = encodeURIComponent(\"select A,B,C,D,E,F\");\n      var query = new google.visualization.Query(url + queryString);\n      query.send(_this.chart.handleREVLineResponse);\n    };\n  \n    this.chart.RdrawChartITA = function() {\n      var url =\n        \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=5Country_REV&headers=1&tq=\";\n      var queryString = encodeURIComponent(\"select A,B\");\n      var query = new google.visualization.Query(url + queryString);\n      query.send(_this.chart.handleREVLineResponse);\n    };\n  \n    this.chart.RdrawChartGER = function() {\n      var url =\n        \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=5Country_REV&headers=1&tq=\";\n      var queryString = encodeURIComponent(\"select A,E\");\n      var query = new google.visualization.Query(url + queryString);\n      query.send(_this.chart.handleREVLineResponse);\n    };\n  \n    this.chart.RdrawChartLUX = function() {\n      var url =\n        \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=5Country_REV&headers=1&tq=\";\n      var queryString = encodeURIComponent(\"select A,F\");\n      var query = new google.visualization.Query(url + queryString);\n      query.send(_this.chart.handleREVLineResponse);\n    };\n  \n    this.chart.RdrawChartCHE = function() {\n      var url =\n        \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=5Country_REV&headers=1&tq=\";\n      var queryString = encodeURIComponent(\"select A,C\");\n      var query = new google.visualization.Query(url + queryString);\n      query.send(_this.chart.handleREVLineResponse);\n    };\n  \n    this.chart.RdrawChartFRA = function() {\n      var url =\n        \"https://docs.google.com/spreadsheets/d/1hWZtGisBtY-n5xhDcCVu-8BTN3KJjwMM0eKi2oTsdcw/gviz/tq?sheet=5Country_REV&headers=1&tq=\";\n      var queryString = encodeURIComponent(\"select A,D\");\n      var query = new google.visualization.Query(url + queryString);\n      query.send(_this.chart.handleREVLineResponse);\n    };\n\n    function errorAlert(res) {\n      alert(\"Error in query: \" + res.getMessage() + \" \" +\n          res.getDetailedMessage());\n    }\n\n    google.charts.load(\"current\", {\n      packages: [\"corechart\"]\n    });\n    google.charts.setOnLoadCallback(this.chart.drawChart);\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <React.Fragment>\n        <div className={classes.geoRoot}>\n          <GeoChart {...this.props} />\n        </div>\n        <Grid className={classes.gridRoot} container spacing={8} direction=\"column\" alignItems=\"center\">\n          <Grid item>\n            <Graph title=\"กราฟแสดงแนวโน้มการเติบโตของ GDP ในแต่ละประเทศ ตั้งแต่ปี 1995 - 2017\">\n              <div ref={this.refAllGdp} style={{ width: 900, height: 500 }}></div>\n              <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <Button variant=\"raised\" color=\"primary\" onClick={() => this.chart.drawChartALL()}>All</Button>\n                <Button variant=\"raised\" color=\"primary\" onClick={() => this.chart.drawChartFRA()}>France</Button>\n                <Button variant=\"raised\" color=\"primary\" onClick={() => this.chart.drawChartGER()}>Germany</Button>\n                <Button variant=\"raised\" color=\"primary\" onClick={() => this.chart.drawChartITA()}>Italy</Button>\n                <Button variant=\"raised\" color=\"primary\" onClick={() => this.chart.drawChartLUX()}>Luxembourg</Button>\n                <Button variant=\"raised\" color=\"primary\" onClick={() => this.chart.drawChartCHE()}>Switzerland</Button>\n              </div>\n            </Graph>\n          </Grid>\n          <Grid item>\n            <Graph title=\"กราฟแสดงแนวโน้มการเติบโตของรายได้ของรัฐในแต่ละประเทศ ตั้งแต่ปี 1995 - 2017\">\n              <div ref={this.refAllRev} style={{ width: 900, height: 500 }}></div>\n              <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <Button variant=\"raised\" color=\"primary\" onClick={() => this.chart.RdrawChartALL()}>All</Button>\n                <Button variant=\"raised\" color=\"primary\" onClick={() => this.chart.RdrawChartFRA()}>France</Button>\n                <Button variant=\"raised\" color=\"primary\" onClick={() => this.chart.RdrawChartGER()}>Germany</Button>\n                <Button variant=\"raised\" color=\"primary\" onClick={() => this.chart.RdrawChartITA()}>Italy</Button>\n                <Button variant=\"raised\" color=\"primary\" onClick={() => this.chart.RdrawChartLUX()}>Luxembourg</Button>\n                <Button variant=\"raised\" color=\"primary\" onClick={() => this.chart.RdrawChartCHE()}>Switzerland</Button>\n              </div>\n            </Graph>\n          </Grid>\n          <Grid item>\n            <Graph \n              title=\"กราฟแสดงแนวโน้วภาษีรายได้บุคคลธรรมดาของแต่ละประเทศ ตั้งแต่ปี 1996 - 2017\" \n              subheader=\"จากการทดสอบด้วย Anova One-Factor เพื่อหาความสัมพันธ์ของอัตราการเติบโตของภาษีของแต่ละประเทศ พบว่าแต่ละประเทศมีแนวโน้มการเติบโตในลักษณะเดียวกัน จากกราฟจะเห็นได้ว่า เส้นแนวโน้มของแต่ละประเทศมีความคล้ายคลึงกัน\">\n              <div ref={this.refTaxGrowthRate} style={{ width: 900, height: 500 }}></div>\n            </Graph>\n          </Grid>\n          <Grid item>\n            <Graph title=\"กราฟเปรียบเทียบค่า GDP ของการจำหน่ายสินค้าในแต่ละประเทศ ตั้งแต่ปี 2015 - 2017\">\n              <div ref={this.refGdpDistributive} style={{ width: 900, height: 500 }}></div>\n            </Graph>\n          </Grid>\n          <Grid item>\n            <Graph title=\"กราฟเปรียบเทียบค่า GDP ของกิจกรรทางการเงินในแต่ละประเทศ ตั้งแต่ปี 2015 - 2017\">\n              <div ref={this.refGdpFinancial} style={{ width: 900, height: 500 }}></div>\n            </Graph>\n          </Grid>\n          <Grid item>\n            <Graph title=\"กราฟเปรียบเทียบค่า GDP ทางด้านอุตสาหกรรมในแต่ละประเทศ ตั้งแต่ปี 2015 - 2017\">\n              <div ref={this.refGdpIndustry} style={{ width: 900, height: 500 }}></div>\n            </Graph>\n          </Grid>\n          <Grid item>\n            <Graph title=\"กราฟเปรียบเทียบรายได้ของรัฐบาลจากสินค้าและบริการของแต่ละประเทศ ตั้งแต่ปี 2016 - 2018\">\n              <div ref={this.refRevGood} style={{ width: 900, height: 500 }}></div>\n            </Graph>\n          </Grid>\n        </Grid>\n      </React.Fragment>\n    );\n  }\n}\n\nconst Main = withStyles(styles)(MainImpl);\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <BrowserRouter basename=\"/\">\n          <Switch>\n            <Route exact path=\"/\" render={props => <Main {...props} />} />\n            <Route exact path=\"/germany\" render={props => <Germany {...props} /> } />\n            <Route exact path=\"/france\" render={props => <France {...props} /> } />\n            <Route exact path=\"/switzerland\" render={props => <Switzerland {...props} /> } />\n            <Route exact path=\"/luxembourg\" render={props => <Luxembourg {...props} /> } />\n            <Route exact path=\"/italy\" render={props => <Italy {...props} /> } />\n            <Redirect to=\"/\" />\n          </Switch>\n        </BrowserRouter>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css';\nimport './animate.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}